////////////////////////////////////////////////////////////////////////////////
// Copyright (c) 1995-2013 Xilinx, Inc.  All rights reserved.
////////////////////////////////////////////////////////////////////////////////
//   ____  ____ 
//  /   /\/   / 
// /___/  \  /    Vendor: Xilinx 
// \   \   \/     Version : 14.7
//  \   \         Application : sch2hdl
//  /   /         Filename : Plus.vf
// /___/   /\     Timestamp : 12/16/2019 07:07:47
// \   \  /  \ 
//  \___\/\___\ 
//
//Command: sch2hdl -intstyle ise -family spartan6 -verilog D:/work/2D/Digital/lab/FullTest/Plus.vf -w D:/work/2D/Digital/lab/FullTest/Plus.sch
//Design Name: Plus
//Device: spartan6
//Purpose:
//    This verilog netlist is translated from an ECS schematic.It can be 
//    synthesized and simulated, but it should not be modified. 
//
`timescale  100 ps / 10 ps

module ADD4_HXILINX_Plus (CO, OFL, S0, S1, S2, S3, A0, A1, A2, A3, B0, B1, B2, B3 , CI);
   
   output      CO;
   output      OFL;
   output      S0;
   output      S1;
   output      S2;
   output      S3;

   input       A0;
   input       A1;
   input       A2;
   input       A3;
   input       B0;
   input       B1;
   input       B2;
   input       B3;
   input       CI;


   assign   {CO, S3, S2, S1, S0} = {A3, A2, A1, A0} + {B3, B2, B1, B0} + CI;
   assign   OFL = (A3 & B3 & (~S3)) | ((~A3) & (~B3) & S3); 
   
endmodule
`timescale  100 ps / 10 ps

module ADSU4_HXILINX_Plus (CO, OFL, S0, S1, S2, S3, A0, A1, A2, A3, ADD, B0, B1, B2, B3, CI);

   output      CO;
   output      OFL;
   output      S0;
   output      S1;
   output      S2;
   output      S3;

   input       A0;
   input       A1;
   input       A2;
   input       A3;
   input       ADD;
   input       B0;
   input       B1;
   input       B2;
   input       B3;
   input       CI;

   reg [4:0]   adsu_tmp;
     
   always @(A0, A1, A2, A3, ADD, B0, B1, B2, B3, CI) begin
      
      if (ADD)
       	adsu_tmp = {A3, A2, A1, A0} + {B3, B2, B1, B0} + CI;
      else
	adsu_tmp = {A3, A2, A1, A0} - (!CI) - {B3, B2, B1, B0};
      
   end 
   
   assign {S3, S2, S1, S0} = adsu_tmp [3:0];
   assign CO =  ADD ? adsu_tmp[4] : ~adsu_tmp[4];
   assign OFL = ADD ? ( (A3 & B3 & (~S3)) | ((~A3) & (~B3) & S3) ) : ( (A3 & (~B3) & (~S3)) | ((~A3) & B3 & S3) );
   
endmodule
`timescale  100 ps / 10 ps

module M2_1_HXILINX_Plus (O, D0, D1, S0);
    

   output O;

   input  D0;
   input  D1;
   input  S0;

   reg O;

   always @ ( D0 or D1 or S0)
   begin
      case(S0)
      1'b0 : O <= D0;
      1'b1 : O <= D1;
      endcase
   end
    
endmodule
`timescale 1ns / 1ps

module Add2_MUSER_Plus(CarryIn, 
                       Input00, 
                       Input01, 
                       Input02, 
                       Input03, 
                       Input10, 
                       Input11, 
                       Input12, 
                       Input13, 
                       CarryOut, 
                       Output);

    input CarryIn;
    input Input00;
    input Input01;
    input Input02;
    input Input03;
    input Input10;
    input Input11;
    input Input12;
    input Input13;
   output CarryOut;
   output [0:3] Output;
   
   wire [0:3] a;
   wire [0:3] b;
   wire XLXN_6;
   wire XLXN_7;
   wire XLXN_17;
   wire XLXN_33;
   wire XLXN_48;
   wire XLXN_50;
   wire CarryOut_DUMMY;
   
   assign CarryOut = CarryOut_DUMMY;
   VCC  XLXI_1 (.P(XLXN_50));
   (* HU_SET = "XLXI_2_182" *) 
   ADSU4_HXILINX_Plus  XLXI_2 (.ADD(XLXN_7), 
                              .A0(a[0]), 
                              .A1(a[1]), 
                              .A2(a[2]), 
                              .A3(a[3]), 
                              .B0(XLXN_48), 
                              .B1(XLXN_50), 
                              .B2(XLXN_48), 
                              .B3(XLXN_50), 
                              .CI(XLXN_50), 
                              .CO(), 
                              .OFL(), 
                              .S0(b[0]), 
                              .S1(b[1]), 
                              .S2(b[2]), 
                              .S3(b[3]));
   INV  XLXI_3 (.I(CarryOut_DUMMY), 
               .O(XLXN_7));
   (* HU_SET = "XLXI_5_187" *) 
   ADD4_HXILINX_Plus  XLXI_5 (.A0(Input00), 
                             .A1(Input01), 
                             .A2(Input02), 
                             .A3(Input03), 
                             .B0(Input10), 
                             .B1(Input11), 
                             .B2(Input12), 
                             .B3(Input13), 
                             .CI(CarryIn), 
                             .CO(XLXN_6), 
                             .OFL(), 
                             .S0(a[0]), 
                             .S1(a[1]), 
                             .S2(a[2]), 
                             .S3(a[3]));
   OR2  XLXI_6 (.I0(a[1]), 
               .I1(a[2]), 
               .O(XLXN_33));
   OR2  XLXI_7 (.I0(XLXN_6), 
               .I1(XLXN_17), 
               .O(CarryOut_DUMMY));
   AND2  XLXI_8 (.I0(a[3]), 
                .I1(XLXN_33), 
                .O(XLXN_17));
   (* HU_SET = "XLXI_8_0_183" *) 
   M2_1_HXILINX_Plus  XLXI_8_0 (.D0(a[0]), 
                               .D1(b[0]), 
                               .S0(CarryOut_DUMMY), 
                               .O(Output[0]));
   (* HU_SET = "XLXI_8_1_184" *) 
   M2_1_HXILINX_Plus  XLXI_8_1 (.D0(a[1]), 
                               .D1(b[1]), 
                               .S0(CarryOut_DUMMY), 
                               .O(Output[1]));
   (* HU_SET = "XLXI_8_2_185" *) 
   M2_1_HXILINX_Plus  XLXI_8_2 (.D0(a[2]), 
                               .D1(b[2]), 
                               .S0(CarryOut_DUMMY), 
                               .O(Output[2]));
   (* HU_SET = "XLXI_8_3_186" *) 
   M2_1_HXILINX_Plus  XLXI_8_3 (.D0(a[3]), 
                               .D1(b[3]), 
                               .S0(CarryOut_DUMMY), 
                               .O(Output[3]));
   GND  XLXI_10 (.G(XLXN_48));
endmodule
`timescale 1ns / 1ps

module Plus(A0, 
            A1, 
            A2, 
            A3, 
            B0, 
            B1, 
            B2, 
            B3, 
            o0, 
            o1, 
            o2, 
            o3);

    input [0:3] A0;
    input [0:3] A1;
    input [0:3] A2;
    input [0:3] A3;
    input [0:3] B0;
    input [0:3] B1;
    input [0:3] B2;
    input [0:3] B3;
   output [0:3] o0;
   output [0:3] o1;
   output [0:3] o2;
   output [0:3] o3;
   
   wire XLXN_1;
   wire XLXN_2;
   wire XLXN_3;
   wire XLXN_4;
   
   Add2_MUSER_Plus  XLXI_4 (.CarryIn(XLXN_4), 
                           .Input00(A0[0]), 
                           .Input01(A0[1]), 
                           .Input02(A0[2]), 
                           .Input03(A0[3]), 
                           .Input10(B0[0]), 
                           .Input11(B0[1]), 
                           .Input12(B0[2]), 
                           .Input13(B0[3]), 
                           .CarryOut(XLXN_1), 
                           .Output(o0[0:3]));
   Add2_MUSER_Plus  XLXI_5 (.CarryIn(XLXN_1), 
                           .Input00(A1[0]), 
                           .Input01(A1[1]), 
                           .Input02(A1[2]), 
                           .Input03(A1[3]), 
                           .Input10(B1[0]), 
                           .Input11(B1[1]), 
                           .Input12(B1[2]), 
                           .Input13(B1[3]), 
                           .CarryOut(XLXN_2), 
                           .Output(o1[0:3]));
   Add2_MUSER_Plus  XLXI_6 (.CarryIn(XLXN_2), 
                           .Input00(A2[0]), 
                           .Input01(A2[1]), 
                           .Input02(A2[2]), 
                           .Input03(A2[3]), 
                           .Input10(B2[0]), 
                           .Input11(B2[1]), 
                           .Input12(B2[2]), 
                           .Input13(B2[3]), 
                           .CarryOut(XLXN_3), 
                           .Output(o2[0:3]));
   Add2_MUSER_Plus  XLXI_7 (.CarryIn(XLXN_3), 
                           .Input00(A3[0]), 
                           .Input01(A3[1]), 
                           .Input02(A3[2]), 
                           .Input03(A3[3]), 
                           .Input10(B3[0]), 
                           .Input11(B3[1]), 
                           .Input12(B3[2]), 
                           .Input13(B3[3]), 
                           .CarryOut(), 
                           .Output(o3[0:3]));
   GND  XLXI_12 (.G(XLXN_4));
endmodule
