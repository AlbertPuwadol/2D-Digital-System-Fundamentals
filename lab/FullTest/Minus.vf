////////////////////////////////////////////////////////////////////////////////
// Copyright (c) 1995-2013 Xilinx, Inc.  All rights reserved.
////////////////////////////////////////////////////////////////////////////////
//   ____  ____ 
//  /   /\/   / 
// /___/  \  /    Vendor: Xilinx 
// \   \   \/     Version : 14.7
//  \   \         Application : sch2hdl
//  /   /         Filename : Minus.vf
// /___/   /\     Timestamp : 12/16/2019 07:07:43
// \   \  /  \ 
//  \___\/\___\ 
//
//Command: sch2hdl -intstyle ise -family spartan6 -verilog D:/work/2D/Digital/lab/FullTest/Minus.vf -w D:/work/2D/Digital/lab/FullTest/Minus.sch
//Design Name: Minus
//Device: spartan6
//Purpose:
//    This verilog netlist is translated from an ECS schematic.It can be 
//    synthesized and simulated, but it should not be modified. 
//
`timescale  100 ps / 10 ps

module ADSU4_HXILINX_Minus (CO, OFL, S0, S1, S2, S3, A0, A1, A2, A3, ADD, B0, B1, B2, B3, CI);

   output      CO;
   output      OFL;
   output      S0;
   output      S1;
   output      S2;
   output      S3;

   input       A0;
   input       A1;
   input       A2;
   input       A3;
   input       ADD;
   input       B0;
   input       B1;
   input       B2;
   input       B3;
   input       CI;

   reg [4:0]   adsu_tmp;
     
   always @(A0, A1, A2, A3, ADD, B0, B1, B2, B3, CI) begin
      
      if (ADD)
       	adsu_tmp = {A3, A2, A1, A0} + {B3, B2, B1, B0} + CI;
      else
	adsu_tmp = {A3, A2, A1, A0} - (!CI) - {B3, B2, B1, B0};
      
   end 
   
   assign {S3, S2, S1, S0} = adsu_tmp [3:0];
   assign CO =  ADD ? adsu_tmp[4] : ~adsu_tmp[4];
   assign OFL = ADD ? ( (A3 & B3 & (~S3)) | ((~A3) & (~B3) & S3) ) : ( (A3 & (~B3) & (~S3)) | ((~A3) & B3 & S3) );
   
endmodule
`timescale  100 ps / 10 ps

module M2_1_HXILINX_Minus (O, D0, D1, S0);
    

   output O;

   input  D0;
   input  D1;
   input  S0;

   reg O;

   always @ ( D0 or D1 or S0)
   begin
      case(S0)
      1'b0 : O <= D0;
      1'b1 : O <= D1;
      endcase
   end
    
endmodule
`timescale 1ns / 1ps

module Minus(CarryIn, 
             Input00, 
             Input01, 
             Input02, 
             Input03, 
             Input10, 
             Input11, 
             Input12, 
             Input13, 
             CarryOut, 
             Output);

    input CarryIn;
    input Input00;
    input Input01;
    input Input02;
    input Input03;
    input Input10;
    input Input11;
    input Input12;
    input Input13;
   output CarryOut;
   output [0:3] Output;
   
   wire [0:3] a;
   wire [0:3] b;
   wire XLXN_11;
   wire XLXN_55;
   wire XLXN_61;
   wire CarryOut_DUMMY;
   
   assign CarryOut = CarryOut_DUMMY;
   (* HU_SET = "XLXI_1_77" *) 
   ADSU4_HXILINX_Minus  XLXI_1 (.ADD(XLXN_11), 
                               .A0(Input00), 
                               .A1(Input01), 
                               .A2(Input02), 
                               .A3(Input03), 
                               .B0(Input10), 
                               .B1(Input11), 
                               .B2(Input12), 
                               .B3(Input13), 
                               .CI(CarryIn), 
                               .CO(CarryOut_DUMMY), 
                               .OFL(), 
                               .S0(a[0]), 
                               .S1(a[1]), 
                               .S2(a[2]), 
                               .S3(a[3]));
   (* HU_SET = "XLXI_2_78" *) 
   ADSU4_HXILINX_Minus  XLXI_2 (.ADD(CarryOut_DUMMY), 
                               .A0(a[0]), 
                               .A1(a[1]), 
                               .A2(a[2]), 
                               .A3(a[3]), 
                               .B0(XLXN_11), 
                               .B1(XLXN_55), 
                               .B2(XLXN_55), 
                               .B3(XLXN_11), 
                               .CI(XLXN_55), 
                               .CO(), 
                               .OFL(), 
                               .S0(b[0]), 
                               .S1(b[1]), 
                               .S2(b[2]), 
                               .S3(b[3]));
   VCC  XLXI_3 (.P(XLXN_55));
   GND  XLXI_4 (.G(XLXN_11));
   (* HU_SET = "XLXI_7_0_79" *) 
   M2_1_HXILINX_Minus  XLXI_7_0 (.D0(a[0]), 
                                .D1(b[0]), 
                                .S0(XLXN_61), 
                                .O(Output[0]));
   (* HU_SET = "XLXI_7_1_80" *) 
   M2_1_HXILINX_Minus  XLXI_7_1 (.D0(a[1]), 
                                .D1(b[1]), 
                                .S0(XLXN_61), 
                                .O(Output[1]));
   (* HU_SET = "XLXI_7_2_81" *) 
   M2_1_HXILINX_Minus  XLXI_7_2 (.D0(a[2]), 
                                .D1(b[2]), 
                                .S0(XLXN_61), 
                                .O(Output[2]));
   (* HU_SET = "XLXI_7_3_82" *) 
   M2_1_HXILINX_Minus  XLXI_7_3 (.D0(a[3]), 
                                .D1(b[3]), 
                                .S0(XLXN_61), 
                                .O(Output[3]));
   INV  XLXI_11 (.I(CarryOut_DUMMY), 
                .O(XLXN_61));
endmodule
