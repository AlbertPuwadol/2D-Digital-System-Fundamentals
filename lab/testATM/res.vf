////////////////////////////////////////////////////////////////////////////////
// Copyright (c) 1995-2013 Xilinx, Inc.  All rights reserved.
////////////////////////////////////////////////////////////////////////////////
//   ____  ____ 
//  /   /\/   / 
// /___/  \  /    Vendor: Xilinx 
// \   \   \/     Version : 14.7
//  \   \         Application : sch2hdl
//  /   /         Filename : res.vf
// /___/   /\     Timestamp : 12/14/2019 18:00:51
// \   \  /  \ 
//  \___\/\___\ 
//
//Command: sch2hdl -intstyle ise -family spartan6 -verilog D:/work/2D/Digital/lab/testATM/res.vf -w D:/work/2D/Digital/lab/testATM/res.sch
//Design Name: res
//Device: spartan6
//Purpose:
//    This verilog netlist is translated from an ECS schematic.It can be 
//    synthesized and simulated, but it should not be modified. 
//
`timescale 100 ps / 10 ps

module FTC_HXILINX_res(Q, C, CLR, T);
   
   output             Q;

   input 	      C;	
   input 	      CLR;	
   input              T;
   
   parameter INIT = 1'b0;
   reg                Q = INIT;
  
   
 
   always @(posedge C or posedge CLR)
     begin
	if (CLR)
	  Q <= 1'b0;
	else if(T)
          Q <= !Q;
     end
   
endmodule
`timescale  100 ps / 10 ps

module ADSU4_HXILINX_res (CO, OFL, S0, S1, S2, S3, A0, A1, A2, A3, ADD, B0, B1, B2, B3, CI);

   output      CO;
   output      OFL;
   output      S0;
   output      S1;
   output      S2;
   output      S3;

   input       A0;
   input       A1;
   input       A2;
   input       A3;
   input       ADD;
   input       B0;
   input       B1;
   input       B2;
   input       B3;
   input       CI;

   reg [4:0]   adsu_tmp;
     
   always @(A0, A1, A2, A3, ADD, B0, B1, B2, B3, CI) begin
      
      if (ADD)
       	adsu_tmp = {A3, A2, A1, A0} + {B3, B2, B1, B0} + CI;
      else
	adsu_tmp = {A3, A2, A1, A0} - (!CI) - {B3, B2, B1, B0};
      
   end 
   
   assign {S3, S2, S1, S0} = adsu_tmp [3:0];
   assign CO =  ADD ? adsu_tmp[4] : ~adsu_tmp[4];
   assign OFL = ADD ? ( (A3 & B3 & (~S3)) | ((~A3) & (~B3) & S3) ) : ( (A3 & (~B3) & (~S3)) | ((~A3) & B3 & S3) );
   
endmodule
`timescale 100 ps / 10 ps

module CD4CE_HXILINX_res(CEO, Q0, Q1, Q2, Q3, TC, C, CE, CLR);
   
   parameter TERMINAL_COUNT = 4'b1001;
   
   output             CEO;
   output             Q0;
   output             Q1;
   output             Q2;
   output             Q3;
   output             TC;

   input 	      C;	
   input 	      CE;	
   input 	      CLR;	
   
   reg                Q0;
   reg                Q1;
   reg                Q2;
   reg                Q3;
   
   always @(posedge C or posedge CLR)
     begin
	if (CLR)
	  {Q3, Q2, Q1, Q0} <= 4'b0000;

	else if (CE)
          begin
             if ({Q3,Q2,Q1,Q0} == 4'b1001)
               {Q3,Q2,Q1,Q0} <= 4'b0000;
             else if({Q3,Q2,Q1,Q0} == 4'b1011)
               {Q3,Q2,Q1,Q0} <= 4'b0110;
             else if({Q3,Q2,Q1,Q0} == 4'b1101)
               {Q3,Q2,Q1,Q0} <= 4'b0100;
             else if({Q3,Q2,Q1,Q0} == 4'b1111)
               {Q3,Q2,Q1,Q0} <= 4'b0010;
            
             else
	      {Q3, Q2, Q1,Q0} <= {Q3, Q2, Q1,Q0} + 1;
          end
     end
   
   assign CEO = TC & CE;
   assign TC = CLR ? 1'b0 : ({Q3, Q2, Q1, Q0} == TERMINAL_COUNT);
   
endmodule
`timescale  100 ps / 10 ps

module M4_1E_HXILINX_res (O, D0, D1, D2, D3, E, S0, S1);
    

   output O;

   input  D0;
   input  D1;
   input  D2;
   input  D3;
   input  E;
   input  S0;
   input  S1;

   reg O;

   always @ ( D0 or D1 or D2 or D3 or E or S0 or S1)
   begin
      if(!E)
      O <= 1'b0;
      else 
      begin
        case({S1,S0})
        2'b00 : O <= D0;
        2'b01 : O <= D1;
        2'b10 : O <= D2;
        2'b11 : O <= D3;
        endcase
      end
   end
    
endmodule
`timescale  100 ps / 10 ps

module D2_4E_HXILINX_res (D0, D1, D2, D3, A0, A1, E);
    

   output D0;
   output D1;
   output D2;
   output D3;

   input  A0;
   input  A1;
   input  E;
  
   reg D0;
   reg D1;
   reg D2;
   reg D3;

      always @ (A0 or A1 or E)
      begin
         if(!E)
           {D3, D2, D1, D0} <= 4'b0000;
        else
        begin
           case({A1,A0})
             2'b00 : {D3,D2,D1,D0} <= 4'b0001;
             2'b01 : {D3,D2,D1,D0} <= 4'b0010;
             2'b10 : {D3,D2,D1,D0} <= 4'b0100;
             2'b11 : {D3,D2,D1,D0} <= 4'b1000;
          endcase
        end
     end 

endmodule
`timescale  100 ps / 10 ps

module M2_1_HXILINX_res (O, D0, D1, S0);
    

   output O;

   input  D0;
   input  D1;
   input  S0;

   reg O;

   always @ ( D0 or D1 or S0)
   begin
      case(S0)
      1'b0 : O <= D0;
      1'b1 : O <= D1;
      endcase
   end
    
endmodule
`timescale 100 ps / 10 ps

module CB2CE_HXILINX_res(CEO, Q0, Q1, TC, C, CE, CLR);
   
   localparam TERMINAL_COUNT = 2'b11;
   
   output             CEO;
   output             Q0;
   output             Q1;
   output             TC;

   input 	      C;	
   input 	      CE;	
   input 	      CLR;	
   
   reg                Q0;
   reg                Q1;
   
   always @(posedge C or posedge CLR)
     begin
	if (CLR)
	  {Q1, Q0} <= 2'b00;
	else if (CE)
	  {Q1,Q0} <= {Q1,Q0} + 1;
     end
   
   assign CEO = TC & CE;
   assign TC = ({Q1,Q0} == TERMINAL_COUNT);
   
endmodule
`timescale  100 ps / 10 ps

module COMPMC8_HXILINX_res (GT, LT, A, B);
    

   output GT;
   output LT;

   input  [7:0] A;
   input  [7:0] B;


   assign GT = A > B  ;
   assign LT = A < B  ;

endmodule
`timescale 1ns / 1ps

module Minus_MUSER_res(CarryIn, 
                       Input00, 
                       Input01, 
                       Input02, 
                       Input03, 
                       Input10, 
                       Input11, 
                       Input12, 
                       Input13, 
                       CarryOut, 
                       Output);

    input CarryIn;
    input Input00;
    input Input01;
    input Input02;
    input Input03;
    input Input10;
    input Input11;
    input Input12;
    input Input13;
   output CarryOut;
   output [0:3] Output;
   
   wire [0:3] a;
   wire [0:3] b;
   wire XLXN_11;
   wire XLXN_55;
   wire XLXN_61;
   wire CarryOut_DUMMY;
   
   assign CarryOut = CarryOut_DUMMY;
   (* HU_SET = "XLXI_1_0" *) 
   ADSU4_HXILINX_res  XLXI_1 (.ADD(XLXN_11), 
                             .A0(Input00), 
                             .A1(Input01), 
                             .A2(Input02), 
                             .A3(Input03), 
                             .B0(Input10), 
                             .B1(Input11), 
                             .B2(Input12), 
                             .B3(Input13), 
                             .CI(CarryIn), 
                             .CO(CarryOut_DUMMY), 
                             .OFL(), 
                             .S0(a[0]), 
                             .S1(a[1]), 
                             .S2(a[2]), 
                             .S3(a[3]));
   (* HU_SET = "XLXI_2_1" *) 
   ADSU4_HXILINX_res  XLXI_2 (.ADD(CarryOut_DUMMY), 
                             .A0(a[0]), 
                             .A1(a[1]), 
                             .A2(a[2]), 
                             .A3(a[3]), 
                             .B0(XLXN_11), 
                             .B1(XLXN_55), 
                             .B2(XLXN_55), 
                             .B3(XLXN_11), 
                             .CI(XLXN_55), 
                             .CO(), 
                             .OFL(), 
                             .S0(b[0]), 
                             .S1(b[1]), 
                             .S2(b[2]), 
                             .S3(b[3]));
   VCC  XLXI_3 (.P(XLXN_55));
   GND  XLXI_4 (.G(XLXN_11));
   (* HU_SET = "XLXI_7_0_2" *) 
   M2_1_HXILINX_res  XLXI_7_0 (.D0(a[0]), 
                              .D1(b[0]), 
                              .S0(XLXN_61), 
                              .O(Output[0]));
   (* HU_SET = "XLXI_7_1_3" *) 
   M2_1_HXILINX_res  XLXI_7_1 (.D0(a[1]), 
                              .D1(b[1]), 
                              .S0(XLXN_61), 
                              .O(Output[1]));
   (* HU_SET = "XLXI_7_2_4" *) 
   M2_1_HXILINX_res  XLXI_7_2 (.D0(a[2]), 
                              .D1(b[2]), 
                              .S0(XLXN_61), 
                              .O(Output[2]));
   (* HU_SET = "XLXI_7_3_5" *) 
   M2_1_HXILINX_res  XLXI_7_3 (.D0(a[3]), 
                              .D1(b[3]), 
                              .S0(XLXN_61), 
                              .O(Output[3]));
   INV  XLXI_11 (.I(CarryOut_DUMMY), 
                .O(XLXN_61));
endmodule
`timescale 1ns / 1ps

module DivideClk_MUSER_res(ClIn, 
                           ClOut);

    input ClIn;
   output ClOut;
   
   wire XLXN_1;
   wire XLXN_2;
   wire XLXN_3;
   wire XLXN_4;
   wire XLXN_7;
   wire XLXN_8;
   wire XLXN_11;
   
   (* HU_SET = "XLXI_1_6" *) 
   CD4CE_HXILINX_res  XLXI_1 (.C(ClIn), 
                             .CE(XLXN_7), 
                             .CLR(), 
                             .CEO(), 
                             .Q0(), 
                             .Q1(), 
                             .Q2(), 
                             .Q3(), 
                             .TC(XLXN_1));
   (* HU_SET = "XLXI_2_7" *) 
   CD4CE_HXILINX_res  XLXI_2 (.C(XLXN_2), 
                             .CE(XLXN_7), 
                             .CLR(), 
                             .CEO(), 
                             .Q0(), 
                             .Q1(), 
                             .Q2(), 
                             .Q3(), 
                             .TC(XLXN_3));
   (* HU_SET = "XLXI_3_8" *) 
   CD4CE_HXILINX_res  XLXI_3 (.C(XLXN_4), 
                             .CE(XLXN_7), 
                             .CLR(), 
                             .CEO(), 
                             .Q0(), 
                             .Q1(), 
                             .Q2(), 
                             .Q3(), 
                             .TC(XLXN_8));
   INV  XLXI_4 (.I(XLXN_1), 
               .O(XLXN_2));
   INV  XLXI_5 (.I(XLXN_3), 
               .O(XLXN_4));
   INV  XLXI_6 (.I(XLXN_8), 
               .O(XLXN_11));
   VCC  XLXI_7 (.P(XLXN_7));
   (* HU_SET = "XLXI_10_9" *) 
   FTC_HXILINX_res  XLXI_10 (.C(XLXN_11), 
                            .CLR(), 
                            .T(XLXN_7), 
                            .Q(ClOut));
endmodule
`timescale 1ns / 1ps

module Svn2_MUSER_res(A, 
                      B, 
                      C, 
                      D, 
                      P, 
                      SegA, 
                      SegB, 
                      SegC, 
                      SegD, 
                      SegE, 
                      SegF, 
                      SegG, 
                      SegP);

    input A;
    input B;
    input C;
    input D;
    input P;
   output SegA;
   output SegB;
   output SegC;
   output SegD;
   output SegE;
   output SegF;
   output SegG;
   output SegP;
   
   wire m;
   wire n;
   wire o;
   wire s;
   wire XLXN_1;
   wire XLXN_9;
   wire XLXN_10;
   wire XLXN_11;
   wire XLXN_39;
   wire XLXN_40;
   wire XLXN_41;
   wire XLXN_42;
   wire XLXN_43;
   wire XLXN_44;
   wire XLXN_45;
   wire XLXN_46;
   wire XLXN_52;
   wire XLXN_53;
   wire XLXN_54;
   wire XLXN_55;
   wire XLXN_56;
   wire XLXN_57;
   wire XLXN_58;
   wire XLXN_59;
   wire XLXN_79;
   wire XLXN_91;
   wire XLXN_93;
   wire XLXN_107;
   wire XLXN_110;
   wire XLXN_112;
   wire XLXN_113;
   wire XLXN_114;
   wire XLXN_116;
   wire XLXN_120;
   wire XLXN_122;
   wire XLXN_136;
   wire XLXN_139;
   wire XLXN_146;
   wire XLXN_147;
   wire XLXN_211;
   wire XLXN_214;
   wire XLXN_215;
   wire XLXN_219;
   wire XLXN_222;
   wire XLXN_223;
   wire XLXN_236;
   wire XLXN_240;
   
   OR3  XLXI_1 (.I0(XLXN_1), 
               .I1(D), 
               .I2(B), 
               .O(XLXN_122));
   XNOR2  XLXI_2 (.I0(C), 
                 .I1(A), 
                 .O(XLXN_1));
   OR3  XLXI_3 (.I0(XLXN_10), 
               .I1(XLXN_9), 
               .I2(D), 
               .O(m));
   INV  XLXI_4 (.I(C), 
               .O(XLXN_9));
   XNOR2  XLXI_5 (.I0(B), 
                 .I1(A), 
                 .O(XLXN_10));
   OR4  XLXI_6 (.I0(D), 
               .I1(C), 
               .I2(XLXN_11), 
               .I3(A), 
               .O(o));
   INV  XLXI_7 (.I(B), 
               .O(XLXN_11));
   OR2  XLXI_8 (.I0(XLXN_41), 
               .I1(XLXN_40), 
               .O(XLXN_39));
   XOR2  XLXI_9 (.I0(B), 
                .I1(A), 
                .O(XLXN_41));
   AND2  XLXI_10 (.I0(XLXN_42), 
                 .I1(XLXN_39), 
                 .O(XLXN_79));
   OR3  XLXI_11 (.I0(XLXN_43), 
                .I1(B), 
                .I2(C), 
                .O(XLXN_42));
   INV  XLXI_12 (.I(C), 
                .O(XLXN_40));
   INV  XLXI_13 (.I(A), 
                .O(XLXN_43));
   OR2  XLXI_14 (.I0(D), 
                .I1(XLXN_79), 
                .O(XLXN_91));
   AND2  XLXI_15 (.I0(XLXN_44), 
                 .I1(XLXN_54), 
                 .O(s));
   OR2  XLXI_16 (.I0(XLXN_45), 
                .I1(XLXN_52), 
                .O(XLXN_44));
   AND2  XLXI_17 (.I0(B), 
                 .I1(XLXN_46), 
                 .O(XLXN_45));
   INV  XLXI_18 (.I(D), 
                .O(XLXN_46));
   INV  XLXI_19 (.I(XLXN_53), 
                .O(XLXN_52));
   OR2  XLXI_20 (.I0(C), 
                .I1(B), 
                .O(XLXN_53));
   INV  XLXI_21 (.I(A), 
                .O(XLXN_54));
   AND2  XLXI_22 (.I0(XLXN_56), 
                 .I1(XLXN_93), 
                 .O(XLXN_107));
   OR3  XLXI_23 (.I0(XLXN_55), 
                .I1(C), 
                .I2(D), 
                .O(XLXN_93));
   XNOR2  XLXI_24 (.I0(A), 
                  .I1(B), 
                  .O(XLXN_55));
   OR3  XLXI_35 (.I0(XLXN_58), 
                .I1(XLXN_57), 
                .I2(D), 
                .O(XLXN_56));
   INV  XLXI_36 (.I(A), 
                .O(XLXN_57));
   INV  XLXI_37 (.I(B), 
                .O(XLXN_58));
   OR2  XLXI_38 (.I0(XLXN_59), 
                .I1(D), 
                .O(XLXN_110));
   AND2  XLXI_39 (.I0(XLXN_114), 
                 .I1(XLXN_112), 
                 .O(XLXN_59));
   OR2  XLXI_40 (.I0(C), 
                .I1(B), 
                .O(XLXN_112));
   AND3  XLXI_41 (.I0(C), 
                 .I1(B), 
                 .I2(A), 
                 .O(XLXN_113));
   INV  XLXI_42 (.I(XLXN_113), 
                .O(XLXN_114));
   INV  XLXI_44 (.I(P), 
                .O(XLXN_116));
   INV  XLXI_46 (.I(XLXN_116), 
                .O(SegP));
   AND3  XLXI_47 (.I0(XLXN_120), 
                 .I1(D), 
                 .I2(A), 
                 .O(n));
   XOR2  XLXI_48 (.I0(C), 
                 .I1(B), 
                 .O(XLXN_120));
   AND2  XLXI_53 (.I0(XLXN_136), 
                 .I1(D), 
                 .O(XLXN_147));
   OR2  XLXI_54 (.I0(XLXN_146), 
                .I1(XLXN_139), 
                .O(XLXN_136));
   AND2  XLXI_55 (.I0(B), 
                 .I1(A), 
                 .O(XLXN_139));
   AND3  XLXI_102 (.I0(XLXN_214), 
                  .I1(C), 
                  .I2(D), 
                  .O(XLXN_211));
   OR2B1  XLXI_103 (.I0(A), 
                   .I1(B), 
                   .O(XLXN_214));
   AND3  XLXI_107 (.I0(B), 
                  .I1(D), 
                  .I2(XLXN_219), 
                  .O(XLXN_215));
   XNOR2  XLXI_108 (.I0(A), 
                   .I1(C), 
                   .O(XLXN_219));
   AND2  XLXI_109 (.I0(D), 
                  .I1(XLXN_223), 
                  .O(XLXN_222));
   OR2  XLXI_110 (.I0(s), 
                 .I1(XLXN_222), 
                 .O(SegE));
   OR2  XLXI_111 (.I0(B), 
                 .I1(C), 
                 .O(XLXN_223));
   AND4B1  XLXI_113 (.I0(B), 
                    .I1(A), 
                    .I2(C), 
                    .I3(D), 
                    .O(XLXN_236));
   AND4B2  XLXI_116 (.I0(A), 
                    .I1(B), 
                    .I2(C), 
                    .I3(D), 
                    .O(XLXN_240));
   AND2B1  XLXI_117 (.I0(n), 
                    .I1(XLXN_122), 
                    .O(SegA));
   AND2B1  XLXI_118 (.I0(XLXN_147), 
                    .I1(m), 
                    .O(SegB));
   AND2B1  XLXI_119 (.I0(XLXN_211), 
                    .I1(o), 
                    .O(SegC));
   AND2B1  XLXI_120 (.I0(XLXN_215), 
                    .I1(XLXN_91), 
                    .O(SegD));
   AND2B1  XLXI_121 (.I0(XLXN_236), 
                    .I1(XLXN_107), 
                    .O(SegF));
   AND2B1  XLXI_122 (.I0(XLXN_240), 
                    .I1(XLXN_110), 
                    .O(SegG));
   AND2B1  XLXI_124 (.I0(A), 
                    .I1(C), 
                    .O(XLXN_146));
endmodule
`timescale 1ns / 1ps

module res(a, 
           b, 
           clk, 
           A, 
           B, 
           C, 
           comm0, 
           comm1, 
           comm2, 
           comm3, 
           D, 
           E, 
           F, 
           G, 
           LED, 
           P);

    input [7:0] a;
    input [7:0] b;
    input clk;
   output A;
   output B;
   output C;
   output comm0;
   output comm1;
   output comm2;
   output comm3;
   output D;
   output E;
   output F;
   output G;
   output LED;
   output P;
   
   wire [7:0] c;
   wire com0;
   wire [0:3] o;
   wire XLXN_10;
   wire [0:3] XLXN_12;
   wire [0:3] XLXN_13;
   wire XLXN_79;
   wire XLXN_81;
   wire XLXN_83;
   wire [0:3] XLXN_97;
   wire XLXN_98;
   wire XLXN_103;
   wire XLXN_104;
   wire XLXN_105;
   wire XLXN_106;
   wire [0:3] XLXN_111;
   wire XLXN_112;
   wire LED_DUMMY;
   
   assign LED = LED_DUMMY;
   Svn2_MUSER_res  XLXI_25 (.A(o[0]), 
                           .B(o[1]), 
                           .C(o[2]), 
                           .D(o[3]), 
                           .P(), 
                           .SegA(A), 
                           .SegB(B), 
                           .SegC(C), 
                           .SegD(D), 
                           .SegE(E), 
                           .SegF(F), 
                           .SegG(G), 
                           .SegP(P));
   DivideClk_MUSER_res  XLXI_36 (.ClIn(clk), 
                                .ClOut(com0));
   (* HU_SET = "XLXI_43_10" *) 
   CB2CE_HXILINX_res  XLXI_43 (.C(com0), 
                              .CE(XLXN_79), 
                              .CLR(), 
                              .CEO(), 
                              .Q0(XLXN_81), 
                              .Q1(XLXN_83), 
                              .TC());
   VCC  XLXI_45 (.P(XLXN_79));
   (* HU_SET = "XLXI_46_11" *) 
   D2_4E_HXILINX_res  XLXI_46 (.A0(XLXN_81), 
                              .A1(XLXN_83), 
                              .E(XLXN_79), 
                              .D0(XLXN_103), 
                              .D1(XLXN_104), 
                              .D2(XLXN_105), 
                              .D3(XLXN_106));
   (* HU_SET = "XLXI_47_0_12" *) 
   M4_1E_HXILINX_res  XLXI_47_0 (.D0(XLXN_12[0]), 
                                .D1(XLXN_13[0]), 
                                .D2(XLXN_97[0]), 
                                .D3(XLXN_111[0]), 
                                .E(XLXN_79), 
                                .S0(XLXN_81), 
                                .S1(XLXN_83), 
                                .O(o[0]));
   (* HU_SET = "XLXI_47_1_13" *) 
   M4_1E_HXILINX_res  XLXI_47_1 (.D0(XLXN_12[1]), 
                                .D1(XLXN_13[1]), 
                                .D2(XLXN_97[1]), 
                                .D3(XLXN_111[1]), 
                                .E(XLXN_79), 
                                .S0(XLXN_81), 
                                .S1(XLXN_83), 
                                .O(o[1]));
   (* HU_SET = "XLXI_47_2_14" *) 
   M4_1E_HXILINX_res  XLXI_47_2 (.D0(XLXN_12[2]), 
                                .D1(XLXN_13[2]), 
                                .D2(XLXN_97[2]), 
                                .D3(XLXN_111[2]), 
                                .E(XLXN_79), 
                                .S0(XLXN_81), 
                                .S1(XLXN_83), 
                                .O(o[2]));
   (* HU_SET = "XLXI_47_3_15" *) 
   M4_1E_HXILINX_res  XLXI_47_3 (.D0(XLXN_12[3]), 
                                .D1(XLXN_13[3]), 
                                .D2(XLXN_97[3]), 
                                .D3(XLXN_111[3]), 
                                .E(XLXN_79), 
                                .S0(XLXN_81), 
                                .S1(XLXN_83), 
                                .O(o[3]));
   INV  XLXI_49 (.I(XLXN_103), 
                .O(comm0));
   INV  XLXI_50 (.I(XLXN_104), 
                .O(comm1));
   INV  XLXI_51 (.I(XLXN_105), 
                .O(comm2));
   INV  XLXI_53 (.I(XLXN_106), 
                .O(comm3));
   GND  XLXI_54_0 (.G(XLXN_111[0]));
   GND  XLXI_54_1 (.G(XLXN_111[1]));
   GND  XLXI_54_2 (.G(XLXN_111[2]));
   GND  XLXI_54_3 (.G(XLXN_111[3]));
   Minus_MUSER_res  XLXI_55 (.CarryIn(XLXN_112), 
                            .Input00(a[0]), 
                            .Input01(a[1]), 
                            .Input02(a[2]), 
                            .Input03(a[3]), 
                            .Input10(c[0]), 
                            .Input11(c[1]), 
                            .Input12(c[2]), 
                            .Input13(c[3]), 
                            .CarryOut(XLXN_10), 
                            .Output(XLXN_12[0:3]));
   Minus_MUSER_res  XLXI_56 (.CarryIn(XLXN_10), 
                            .Input00(a[4]), 
                            .Input01(a[5]), 
                            .Input02(a[6]), 
                            .Input03(a[7]), 
                            .Input10(c[4]), 
                            .Input11(c[5]), 
                            .Input12(c[6]), 
                            .Input13(c[7]), 
                            .CarryOut(XLXN_98), 
                            .Output(XLXN_13[0:3]));
   Minus_MUSER_res  XLXI_58 (.CarryIn(XLXN_98), 
                            .Input00(), 
                            .Input01(), 
                            .Input02(), 
                            .Input03(), 
                            .Input10(), 
                            .Input11(), 
                            .Input12(), 
                            .Input13(), 
                            .CarryOut(), 
                            .Output(XLXN_97[0:3]));
   VCC  XLXI_60 (.P(XLXN_112));
   (* HU_SET = "XLXI_62_16" *) 
   COMPMC8_HXILINX_res  XLXI_62 (.A(a[7:0]), 
                                .B(b[7:0]), 
                                .GT(), 
                                .LT(LED_DUMMY));
   AND2B1  XLXI_64_0 (.I0(LED_DUMMY), 
                     .I1(b[7]), 
                     .O(c[7]));
   AND2B1  XLXI_64_1 (.I0(LED_DUMMY), 
                     .I1(b[6]), 
                     .O(c[6]));
   AND2B1  XLXI_64_2 (.I0(LED_DUMMY), 
                     .I1(b[5]), 
                     .O(c[5]));
   AND2B1  XLXI_64_3 (.I0(LED_DUMMY), 
                     .I1(b[4]), 
                     .O(c[4]));
   AND2B1  XLXI_64_4 (.I0(LED_DUMMY), 
                     .I1(b[3]), 
                     .O(c[3]));
   AND2B1  XLXI_64_5 (.I0(LED_DUMMY), 
                     .I1(b[2]), 
                     .O(c[2]));
   AND2B1  XLXI_64_6 (.I0(LED_DUMMY), 
                     .I1(b[1]), 
                     .O(c[1]));
   AND2B1  XLXI_64_7 (.I0(LED_DUMMY), 
                     .I1(b[0]), 
                     .O(c[0]));
endmodule
