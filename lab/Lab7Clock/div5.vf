////////////////////////////////////////////////////////////////////////////////
// Copyright (c) 1995-2013 Xilinx, Inc.  All rights reserved.
////////////////////////////////////////////////////////////////////////////////
//   ____  ____ 
//  /   /\/   / 
// /___/  \  /    Vendor: Xilinx 
// \   \   \/     Version : 14.7
//  \   \         Application : sch2hdl
//  /   /         Filename : div5.vf
// /___/   /\     Timestamp : 10/27/2019 16:31:36
// \   \  /  \ 
//  \___\/\___\ 
//
//Command: sch2hdl -intstyle ise -family spartan6 -verilog D:/Digital/lab/Lab7Clock/div5.vf -w D:/Digital/lab/Lab7Clock/div5.sch
//Design Name: div5
//Device: spartan6
//Purpose:
//    This verilog netlist is translated from an ECS schematic.It can be 
//    synthesized and simulated, but it should not be modified. 
//
`timescale 100 ps / 10 ps

module CB4CE_HXILINX_div5(CEO, Q0, Q1, Q2, Q3, TC, C, CE, CLR);
   
   localparam TERMINAL_COUNT = 4'b1111;
   
   output             CEO;
   output             Q0;
   output             Q1;
   output             Q2;
   output             Q3;
   output             TC;

   input 	      C;	
   input 	      CE;	
   input 	      CLR;	
   
   reg                Q0;
   reg                Q1;
   reg                Q2;
   reg                Q3;
   
   always @(posedge C or posedge CLR)
     begin
	if (CLR)
	  {Q3, Q2, Q1, Q0} <= 4'b0000;
	else if (CE)
	  {Q3, Q2, Q1,Q0} <= {Q3, Q2, Q1,Q0} + 1;
     end
   
   assign CEO = TC & CE;
   assign TC = ({Q3, Q2, Q1, Q0} == TERMINAL_COUNT);
   
endmodule
`timescale 1ns / 1ps

module div5(Clk_IN, 
            Clk_OUT);

    input Clk_IN;
   output Clk_OUT;
   
   wire XLXN_1;
   wire XLXN_2;
   wire XLXN_3;
   wire XLXN_4;
   wire Clk_OUT_DUMMY;
   
   assign Clk_OUT = Clk_OUT_DUMMY;
   (* HU_SET = "XLXI_1_30" *) 
   CB4CE_HXILINX_div5  XLXI_1 (.C(XLXN_1), 
                              .CE(XLXN_2), 
                              .CLR(Clk_OUT_DUMMY), 
                              .CEO(), 
                              .Q0(XLXN_4), 
                              .Q1(), 
                              .Q2(XLXN_3), 
                              .Q3(), 
                              .TC());
   AND2  XLXI_2 (.I0(Clk_IN), 
                .I1(XLXN_2), 
                .O(XLXN_1));
   VCC  XLXI_3 (.P(XLXN_2));
   AND2  XLXI_4 (.I0(XLXN_3), 
                .I1(XLXN_4), 
                .O(Clk_OUT_DUMMY));
endmodule
