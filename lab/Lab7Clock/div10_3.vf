////////////////////////////////////////////////////////////////////////////////
// Copyright (c) 1995-2013 Xilinx, Inc.  All rights reserved.
////////////////////////////////////////////////////////////////////////////////
//   ____  ____ 
//  /   /\/   / 
// /___/  \  /    Vendor: Xilinx 
// \   \   \/     Version : 14.7
//  \   \         Application : sch2hdl
//  /   /         Filename : div10_3.vf
// /___/   /\     Timestamp : 11/10/2019 16:59:46
// \   \  /  \ 
//  \___\/\___\ 
//
//Command: sch2hdl -intstyle ise -family spartan6 -verilog D:/Digital/lab/Lab7Clock/div10_3.vf -w D:/Digital/lab/Lab7Clock/div10_3.sch
//Design Name: div10_3
//Device: spartan6
//Purpose:
//    This verilog netlist is translated from an ECS schematic.It can be 
//    synthesized and simulated, but it should not be modified. 
//
`timescale 100 ps / 10 ps

module CD4CE_HXILINX_div10_3(CEO, Q0, Q1, Q2, Q3, TC, C, CE, CLR);
   
   parameter TERMINAL_COUNT = 4'b1001;
   
   output             CEO;
   output             Q0;
   output             Q1;
   output             Q2;
   output             Q3;
   output             TC;

   input 	      C;	
   input 	      CE;	
   input 	      CLR;	
   
   reg                Q0;
   reg                Q1;
   reg                Q2;
   reg                Q3;
   
   always @(posedge C or posedge CLR)
     begin
	if (CLR)
	  {Q3, Q2, Q1, Q0} <= 4'b0000;

	else if (CE)
          begin
             if ({Q3,Q2,Q1,Q0} == 4'b1001)
               {Q3,Q2,Q1,Q0} <= 4'b0000;
             else if({Q3,Q2,Q1,Q0} == 4'b1011)
               {Q3,Q2,Q1,Q0} <= 4'b0110;
             else if({Q3,Q2,Q1,Q0} == 4'b1101)
               {Q3,Q2,Q1,Q0} <= 4'b0100;
             else if({Q3,Q2,Q1,Q0} == 4'b1111)
               {Q3,Q2,Q1,Q0} <= 4'b0010;
            
             else
	      {Q3, Q2, Q1,Q0} <= {Q3, Q2, Q1,Q0} + 1;
          end
     end
   
   assign CEO = TC & CE;
   assign TC = CLR ? 1'b0 : ({Q3, Q2, Q1, Q0} == TERMINAL_COUNT);
   
endmodule
`timescale 1ns / 1ps

module div10_3(Clk_IN, 
               Clk_OUT);

    input Clk_IN;
   output Clk_OUT;
   
   wire XLXN_1;
   wire XLXN_2;
   wire XLXN_19;
   wire XLXN_20;
   
   AND2  XLXI_2 (.I0(Clk_IN), 
                .I1(XLXN_2), 
                .O(XLXN_1));
   VCC  XLXI_3 (.P(XLXN_2));
   (* HU_SET = "XLXI_11_0" *) 
   CD4CE_HXILINX_div10_3  XLXI_11 (.C(XLXN_1), 
                                  .CE(XLXN_2), 
                                  .CLR(XLXN_20), 
                                  .CEO(XLXN_19), 
                                  .Q0(), 
                                  .Q1(), 
                                  .Q2(), 
                                  .Q3(), 
                                  .TC());
   INV  XLXI_12 (.I(XLXN_19), 
                .O(Clk_OUT));
   GND  XLXI_13 (.G(XLXN_20));
endmodule
