////////////////////////////////////////////////////////////////////////////////
// Copyright (c) 1995-2013 Xilinx, Inc.  All rights reserved.
////////////////////////////////////////////////////////////////////////////////
//   ____  ____ 
//  /   /\/   / 
// /___/  \  /    Vendor: Xilinx 
// \   \   \/     Version : 14.7
//  \   \         Application : sch2hdl
//  /   /         Filename : Mymux3.vf
// /___/   /\     Timestamp : 10/28/2019 13:00:22
// \   \  /  \ 
//  \___\/\___\ 
//
//Command: sch2hdl -intstyle ise -family spartan6 -verilog D:/Digital/lab/lab8/Mymux3.vf -w D:/Digital/lab/lab8/Mymux3.sch
//Design Name: Mymux3
//Device: spartan6
//Purpose:
//    This verilog netlist is translated from an ECS schematic.It can be 
//    synthesized and simulated, but it should not be modified. 
//
`timescale  100 ps / 10 ps

module M4_1E_HXILINX_Mymux3 (O, D0, D1, D2, D3, E, S0, S1);
    

   output O;

   input  D0;
   input  D1;
   input  D2;
   input  D3;
   input  E;
   input  S0;
   input  S1;

   reg O;

   always @ ( D0 or D1 or D2 or D3 or E or S0 or S1)
   begin
      if(!E)
      O <= 1'b0;
      else 
      begin
        case({S1,S0})
        2'b00 : O <= D0;
        2'b01 : O <= D1;
        2'b10 : O <= D2;
        2'b11 : O <= D3;
        endcase
      end
   end
    
endmodule
`timescale 100 ps / 10 ps

module CB2CE_HXILINX_Mymux3(CEO, Q0, Q1, TC, C, CE, CLR);
   
   localparam TERMINAL_COUNT = 2'b11;
   
   output             CEO;
   output             Q0;
   output             Q1;
   output             TC;

   input 	      C;	
   input 	      CE;	
   input 	      CLR;	
   
   reg                Q0;
   reg                Q1;
   
   always @(posedge C or posedge CLR)
     begin
	if (CLR)
	  {Q1, Q0} <= 2'b00;
	else if (CE)
	  {Q1,Q0} <= {Q1,Q0} + 1;
     end
   
   assign CEO = TC & CE;
   assign TC = ({Q1,Q0} == TERMINAL_COUNT);
   
endmodule
`timescale 1ns / 1ps

module Decoder_MUSER_Mymux3(q0, 
                            q1, 
                            com);

    input q0;
    input q1;
   output [3:0] com;
   
   
   OR2  XLXI_1 (.I0(q0), 
               .I1(q1), 
               .O(com[0]));
   OR2B1  XLXI_2 (.I0(q0), 
                 .I1(q1), 
                 .O(com[1]));
   OR2B1  XLXI_3 (.I0(q1), 
                 .I1(q0), 
                 .O(com[2]));
   VCC  XLXI_5 (.P(com[3]));
endmodule
`timescale 1ns / 1ps

module Mymux3(bit03, 
              bit47, 
              CarryIN, 
              s, 
              com, 
              toseven);

    input [3:0] bit03;
    input [3:0] bit47;
    input CarryIN;
    input s;
   output [3:0] com;
   output [3:0] toseven;
   
   wire XLXN_20;
   wire XLXN_24;
   wire XLXN_28;
   
   (* HU_SET = "XLXI_11_22" *) 
   M4_1E_HXILINX_Mymux3  XLXI_11 (.D0(bit03[0]), 
                                 .D1(bit47[0]), 
                                 .D2(CarryIN), 
                                 .D3(), 
                                 .E(XLXN_20), 
                                 .S0(XLXN_28), 
                                 .S1(XLXN_24), 
                                 .O(toseven[0]));
   (* HU_SET = "XLXI_12_25" *) 
   M4_1E_HXILINX_Mymux3  XLXI_12 (.D0(bit03[1]), 
                                 .D1(bit47[1]), 
                                 .D2(), 
                                 .D3(), 
                                 .E(XLXN_20), 
                                 .S0(XLXN_28), 
                                 .S1(XLXN_24), 
                                 .O(toseven[1]));
   (* HU_SET = "XLXI_13_24" *) 
   M4_1E_HXILINX_Mymux3  XLXI_13 (.D0(bit03[2]), 
                                 .D1(bit47[2]), 
                                 .D2(), 
                                 .D3(), 
                                 .E(XLXN_20), 
                                 .S0(XLXN_28), 
                                 .S1(XLXN_24), 
                                 .O(toseven[2]));
   (* HU_SET = "XLXI_14_23" *) 
   M4_1E_HXILINX_Mymux3  XLXI_14 (.D0(bit03[3]), 
                                 .D1(bit47[3]), 
                                 .D2(), 
                                 .D3(), 
                                 .E(XLXN_20), 
                                 .S0(XLXN_28), 
                                 .S1(XLXN_24), 
                                 .O(toseven[3]));
   (* HU_SET = "XLXI_15_26" *) 
   CB2CE_HXILINX_Mymux3  XLXI_15 (.C(s), 
                                 .CE(XLXN_20), 
                                 .CLR(), 
                                 .CEO(), 
                                 .Q0(XLXN_28), 
                                 .Q1(XLXN_24), 
                                 .TC());
   VCC  XLXI_16 (.P(XLXN_20));
   Decoder_MUSER_Mymux3  XLXI_17 (.q0(XLXN_28), 
                                 .q1(XLXN_24), 
                                 .com(com[3:0]));
endmodule
